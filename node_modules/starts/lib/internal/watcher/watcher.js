"use strict";
var chokidar = require("chokidar");
var utils_1 = require("../utils");
var WatchManager = (function () {
    function WatchManager() {
        var _this = this;
        this.watchers = Object.create(null);
        this.addWatch = function (patterns, cb) {
            var watcher = _this.getWatcher(patterns);
            var debounced = utils_1.debounce(function () { return cb(); }, 100);
            // Just the ones that impact file listing
            // https://github.com/paulmillr/chokidar#methods--events
            watcher.on('add', debounced);
            watcher.on('addDir', debounced);
            watcher.on('unlink', debounced);
            watcher.on('unlinkDir', debounced);
            // Just for changes
            watcher.on('change', debounced);
        };
    }
    WatchManager.prototype.getWatcher = function (patterns) {
        var key = JSON.stringify(patterns);
        if (!this.watchers[key]) {
            this.watchers[key] = chokidar.watch(patterns, { ignoreInitial: true });
        }
        return this.watchers[key];
    };
    return WatchManager;
}());
/**
 * Add a watch for given patterns
 */
exports.addWatch = new WatchManager().addWatch;
